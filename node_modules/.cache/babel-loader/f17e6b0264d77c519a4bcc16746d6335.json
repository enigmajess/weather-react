{"ast":null,"code":"var _jsxFileName = \"/home/jessica/Documents/weather-react/src/WeatherTemperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherTemperature(props) {\n  _s();\n\n  const [unit, setUnit] = useState(\"celcius\");\n\n  function convertToFahrenheit(event) {\n    event.preventDefault();\n    setUnit(\"fahrenheit\");\n  }\n\n  if (unit === `celcius`) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherTemperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temperature\",\n        children: Math.round(props.celcius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [\" \\xB0C|\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: convertToFahrenheit,\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  } else {\n    return \"F\";\n  }\n}\n\n_s(WeatherTemperature, \"VWlmL7eJQWuEIsjcIPjDiKphblM=\");\n\n_c = WeatherTemperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherTemperature\");","map":{"version":3,"names":["React","useState","WeatherTemperature","props","unit","setUnit","convertToFahrenheit","event","preventDefault","Math","round","celcius"],"sources":["/home/jessica/Documents/weather-react/src/WeatherTemperature.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function WeatherTemperature(props) {\n    const [unit,setUnit] = useState(\"celcius\");\n\n    function convertToFahrenheit(event) {\n        event.preventDefault();\n        setUnit(\"fahrenheit\")\n    }\n\n    if (unit === `celcius`) {\n        return (\n            <div className=\"WeatherTemperature\">\n                <span className=\"temperature\">\n                    {Math.round(props.celcius)}\n                </span>\n                <span className=\"unit\"> °C|<a href=\"/\" onClick={convertToFahrenheit}>°F</a>\n                </span>\n            </div>\n        )\n    } else {\n        return \"F\";\n    }\n   \n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;EAAA;;EAC9C,MAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAC,SAAD,CAA/B;;EAEA,SAASK,mBAAT,CAA6BC,KAA7B,EAAoC;IAChCA,KAAK,CAACC,cAAN;IACAH,OAAO,CAAC,YAAD,CAAP;EACH;;EAED,IAAID,IAAI,KAAM,SAAd,EAAwB;IACpB,oBACI;MAAK,SAAS,EAAC,oBAAf;MAAA,wBACI;QAAM,SAAS,EAAC,aAAhB;QAAA,UACKK,IAAI,CAACC,KAAL,CAAWP,KAAK,CAACQ,OAAjB;MADL;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAM,SAAS,EAAC,MAAhB;QAAA,mCAA2B;UAAG,IAAI,EAAC,GAAR;UAAY,OAAO,EAAEL,mBAArB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA3B;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EASH,CAVD,MAUO;IACH,OAAO,GAAP;EACH;AAEJ;;GAtBuBJ,kB;;KAAAA,kB"},"metadata":{},"sourceType":"module"}